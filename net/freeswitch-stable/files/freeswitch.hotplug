#!/bin/sh

DEFAULT=/etc/default/freeswitch
FS=FreeSWITCH
FS_INIT=/etc/init.d/freeswitch
LOGGER="/usr/bin/logger -t $FS-hotplug --"
MOUNTS=/proc/mounts
NTPQ=/usr/sbin/ntpq
PIDOF=/bin/pidof
UCI=/sbin/uci

[ "$ACTION" = ifup ] || exit 0

[ -f $DEFAULT ] && . $DEFAULT

[ -n "$FS_HOTPLUG_INTERFACE" ] || exit 0

[ "$INTERFACE" = "$FS_HOTPLUG_INTERFACE" ] || exit 0

$PIDOF freeswitch &> /dev/null
if [ $? -eq 0 ]; then
  $LOGGER Killing $FS
  $FS_INIT stop &> /dev/null
  $PIDOF freeswitch &> /dev/null
  if [ $? -eq 0 ]; then
    $LOGGER Failed to stop $FS
    $LOGGER Exiting
    exit 1
  else
    $LOGGER $FS killed
  fi
fi

[ "$FS_HOTPLUG_TIMEOUT" -gt 0 ] 2> /dev/null || unset FS_HOTPLUG_TIMEOUT
TIMEOUT="${FS_HOTPLUG_TIMEOUT:-60}"

# Mount condition, idea lifted from OpenWrt wiki
[ -n "$FS_HOTPLUG_MOUNTPOINT" ] && {

  if ! [ -d "$FS_HOTPLUG_MOUNTPOINT" ]; then
    $LOGGER "$FS_HOTPLUG_MOUNTPOINT" not a valid mount point
    $LOGGER Exiting
    exit 1
  fi

  mnt="$FS_HOTPLUG_MOUNTPOINT"
  notReady=start
  timeout=$TIMEOUT

  while [ -n "$notReady" -a $timeout -gt 0 ]; do
    if [ "$notReady" != start ]; then
      $LOGGER "$mnt" not mounted yet
      $LOGGER Giving up in $timeout seconds
      sleep 5
      timeout=$(($timeout-5))
    fi

    notReady=

    result=$(cat $MOUNTS | awk '{print $2}' | grep "^$mnt\$")
    if [ -z "$result" ]; then
      notReady="$mnt not ready yet"
    fi
  done

  if [ -n "$notReady" ]; then
    $LOGGER "$mnt" still not mounted
    $LOGGER Waited $TIMEOUT seconds
    $LOGGER Not starting $FS
    exit 1
  else
    $LOGGER "$mnt" mounted
  fi

}

# ntpd condition
[ -n "$FS_HOTPLUG_NTPD" ] && {

  type $NTPQ &> /dev/null
  [ $? -eq 0 ] || {
    $LOGGER ntpq utility not found
    $LOGGER Not starting $FS
    exit 1
  }

  $PIDOF ntpd &> /dev/null || {
    $LOGGER ntpd not running
    $LOGGER Not starting $FS
    exit 1
  }

  notReady=start
  timeout=$TIMEOUT

  result=$($UCI get 'system.ntp.enabled' 2> /dev/null)
  [ $result -eq 1 ] 2> /dev/null && {
    $LOGGER BusyBox NTP client _and_ ntpd running
    $LOGGER Probably not what you want
  }

  while [ -n "$notReady" -a $timeout -gt 0 ]; do
    if [ "$notReady" != start ]; then
      $LOGGER System time not in sync yet
      $LOGGER Giving up in $timeout seconds
      sleep 5
      timeout=$(($timeout-5))
    fi

    notReady=

    result=$($NTPQ -c 'timeout 300' -c 'rv 0 stratum' 2> /dev/null | \
                        awk -F '=' '{print $2}' | grep -o -E '^[0-9]+')
    if [ -z $result ]; then
      $LOGGER Failed to extract stratum from ntpd
      notReady="unable to extract stratum"
      # return to top of while loop
      continue 2
    else
      $LOGGER ntpd stratum $result
    fi

    if [ $result -lt 16 ] 2> /dev/null; then
      result=$($NTPQ -c 'timeout 300' -c 'rv 0 offset' 2> /dev/null | \
                      awk -F '=' '{print $2}' | grep -o -E '^-?[0-9]+')
      if [ -z $result ]; then
        $LOGGER Failed to extract offset from ntpd
        notReady="unable to extract offset"
      else
        # "-0" looks stupid, so remove "-"
        result=$(echo $result | grep -o '[0-9]*')
        $LOGGER ntpd to system time offset \+\/\- $result ms
        # If offset < 100 ms consider system time in sync
        [ $result -lt 100 ] || notReady="system time not in sync yet"
      fi
    else
      notReady="ntpd not in sync yet"
    fi
  done

  if [ -n "$notReady" ]; then
    $LOGGER System time still not in sync
    $LOGGER Waited $TIMEOUT seconds
    $LOGGER Not starting $FS
    exit 1
  else
    $LOGGER System time in sync
  fi

}

$FS_INIT start &> /dev/null
$PIDOF freeswitch &> /dev/null
if [ $? -eq 0 ]; then
  $LOGGER Started $FS due to \"ifup "$INTERFACE"\" event
else
  $LOGGER Start of $FS due to \"ifup "$INTERFACE"\" event failed
  exit 1
fi
