--- a/src/mod/languages/mod_v8/Makefile.am
+++ b/src/mod/languages/mod_v8/Makefile.am
@@ -15,7 +15,7 @@ V8_LIBEXT=dylib
 V8_BUILDPARAMS=snapshot=off i18nsupport=off
 V8_SNAPSHOT=nosnapshot
 else
-V8_LIBDIR=$(V8_BUILDDIR)/out/native/lib.target
+V8_LIBDIR=$(V8_BUILDDIR)/out/$(FS_STABLE_MYARCH).release/lib.target
 V8_LIBEXT=so
 # Some gcc versions report warnings incorrectly
 V8_BUILDPARAMS=strictaliasing=off werror=no i18nsupport=off
@@ -29,8 +29,8 @@ V8_STATIC_DIR=$(V8_BUILDDIR)/out/native
 V8_ICU_STATIC_DIR=$(V8_BUILDDIR)/out/native
 V8_CXXFLAGS =
 else
-V8_STATIC_DIR=$(V8_BUILDDIR)/out/native/obj.target/tools/gyp
-V8_ICU_STATIC_DIR=$(V8_BUILDDIR)/out/native/obj.target/third_party/icu
+V8_STATIC_DIR=$(V8_BUILDDIR)/out/$(FS_STABLE_MYARCH).release/obj.target/tools/gyp
+V8_ICU_STATIC_DIR=$(V8_BUILDDIR)/out/$(FS_STABLE_MYARCH).release/obj.target/third_party/icu
 V8_CXXFLAGS = -fPIC
 endif
 V8LIB=$(V8_STATIC_DIR)/libv8_base*.a
@@ -46,11 +46,6 @@ else
 V8_EXTRA_BUILD_PARAMS=--no-parallel
 endif
 
-# Try to find the target platform for our configured CXX compiler
-# Parse the result one extra time to handle different i386 platforms (i386, i486 etc)
-CXX_TARGET_PLATFORM := $(shell $(CXX) -v 2>&1 | grep Target | cut '-d:' -f2 | cut '-d-' -f1 | tr -d ' ')
-CXX_TARGET_PLATFORM_I386 := $(shell echo "$(CXX_TARGET_PLATFORM)" | sed 's/^\(.\{1\}\)\(.\{1\}\)/\13/')
-
 MODNAME=mod_v8
 
 AM_CFLAGS    += -I. -I./include -I$(switch_srcdir)/src/mod/languages/mod_v8/include -I$(V8_DIR)/include
@@ -121,21 +116,13 @@ $(V8_DIR)/.stamp-patch: $(V8_DIR)
 
 $(V8LIB): $(V8_DIR) $(V8_DIR)/.stamp-patch
 	mkdir -p $(V8_BUILDDIR)
-	if test "$(CXX_TARGET_PLATFORM)" = "x86_64"; then \
-	   defines="v8_target_arch=x64 target_arch=x64"; \
-	else \
-	   if test "$(CXX_TARGET_PLATFORM)" = "arm"; then \
-	      defines="v8_target_arch=arm target_arch=arm"; \
-	   else \
-	      if test "$(CXX_TARGET_PLATFORM_I386)" = "i386"; then \
-	         defines="v8_target_arch=ia32 target_arch=ia32"; \
-	      fi; \
-	   fi; \
-	fi; \
-	cd $(V8_BUILDDIR) && CFLAGS="$(V8_CXXFLAGS)" CXXFLAGS="$(V8_CXXFLAGS)" \
-	LINK=@CXX@ CXX=@CXX@ GYPFLAGS="$(V8_EXTRA_BUILD_PARAMS)" GYP_DEFINES="$$defines" \
-	OUTDIR=$(V8_BUILDDIR)/out \
-	PYTHONPATH="$(V8_DIR)/build/gyp/pylib:$(PYTHONPATH)" $(MAKE) -C $(V8_DIR) $(V8_BUILDPARAMS) native
+	cd $(V8_BUILDDIR) && $(DEFAULT_VARS) CFLAGS+="$(V8_CXXFLAGS)" CXXFLAGS+="$(V8_CXXFLAGS)" \
+	LINK=@CXX@ CXX=@CXX@ GYPFLAGS="$(V8_EXTRA_BUILD_PARAMS)" \
+	OUTDIR=./out/ \
+	PYTHONPATH="$(V8_DIR)/build/gyp/pylib:$(FS_STABLE_HOST_PYTHONPATH)" $(MAKE) -C $(V8_DIR) \
+	CC.host="$(FS_STABLE_HOSTCC)" CFLAGS.host="$(FS_STABLE_HOST_CFLAGS)" CXX.host="$(FS_STABLE_HOSTCXX)" \
+	CXXFLAGS.host="$(FS_STABLE_HOST_CFLAGS)" LDFLAGS.host="$(FS_STABLE_HOST_LDFLAGS)" \
+	$(V8_BUILDPARAMS) $(FS_STABLE_MYDEFINES) $(FS_STABLE_MYARCH).release
 
 if ENABLE_STATIC_V8
 install-exec-local: $(V8LIB)
